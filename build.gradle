plugins {
	id "architectury-plugin" version "3.4-SNAPSHOT"
	id "dev.architectury.loom" version "0.12.0-SNAPSHOT" apply false

	id "io.github.juuxel.loom-quiltflower" version "1.7.2" apply false // Quiltflower, a better decompiler
	// Quilt Mappings, for parameters and javadoc. Also hashed mojmap.
	id "org.quiltmc.quilt-mappings-on-loom" version "4.2.0"

	id 'com.matthewprenger.cursegradle' version '1.4.0'
	id "com.modrinth.minotaur" version "1.1.0"
	// Dokka docs
	id "org.jetbrains.kotlin.jvm" version "1.5.31"
	id("org.jetbrains.dokka") version "1.5.30"
}

repositories {
	mavenCentral()
	maven {
		url 'https://jitpack.io'
	}
	maven { url "https://maven.pkg.jetbrains.space/public/p/kotlinx-html/maven" }
}

architectury {
	minecraft = rootProject.minecraft_version
}

subprojects {
	apply plugin: "dev.architectury.loom"

	loom {
		silentMojangMappingsLicense()
	}

	dependencies {
		minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
		mappings loom.layered {
			it.addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${rootProject.minecraft_version}+build.${rootProject.quilt_mappings}:v2"))
			// https://lambdaurora.dev/tools/import_quilt.html
			it.officialMojangMappings {
				setNameSyntheticMembers(false)
			}
		}

		/*mappings(loom.layered {
			mappings("net.fabricmc:yarn:${project.yarn_mappings}:v2")
			officialMojangMappings()
		})*/


		// Thanks Shedaniel :)
		implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib', version: '1.5.20-M1'
	}
}

allprojects {
	apply plugin: "java"
	apply plugin: "architectury-plugin"
	apply plugin: "maven-publish"

	archivesBaseName = rootProject.archives_base_name
	version = rootProject.mod_version
	group = rootProject.maven_group

	repositories {
		mavenCentral()
		maven {
			url 'https://jitpack.io'
		}
		maven {
			name = "Nucleoid maven"
			url = "https://maven.nucleoid.xyz/"
		}
		maven { url "https://maven.pkg.jetbrains.space/public/p/kotlinx-html/maven" }
	}

	tasks.withType(JavaCompile).configureEach {
		// ensure that the encoding is set to UTF-8, no matter what the system default is
		// this fixes some edge cases with special characters not displaying correctly
		// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
		// If Javadoc is generated, this must be specified in that task too.
		it.options.encoding = "UTF-8"

		// Minecraft 1.17 (21w19a) upwards uses Java 16.
		it.options.release = 17
	}


	java {
		withSourcesJar()
	}
}
