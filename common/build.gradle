plugins {
    // Dokka docs
    id "org.jetbrains.kotlin.jvm"
    id("org.jetbrains.dokka")
}

dependencies {
    // We depend on fabric loader here to use the fabric @Environment annotations and get the mixin dependencies
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.loader_version}"

    modCompileOnly "xyz.nucleoid:disguiselib-fabric:${rootProject.disguiselib_version}"
    modCompileOnly files('libs/config2brigadier-common.jar')



    // Built using vanillagradle, no need for remapping
    //compileOnly("com.github.samolego:Config2Brigadier:55370d49b3")
    modCompileOnly "eu.pb4:sgui:${rootProject.sgui_version}"
}

def ENV = System.getenv();

architectury {
    common(rootProject.enable_forge.toBoolean())
}

tasks.withType(dokkaHtmlPartial.getClass()).configureEach {
    pluginsMapConfiguration.set(
            ["org.jetbrains.dokka.base.DokkaBase": """{ "separateInheritedMembers": true}"""]
    )
}

publishing {
    publications {
        mavenCommon(MavenPublication) {
            artifactId = rootProject.archives_base_name
            // add all the jars that should be included when publishing to maven
            artifact remapJar
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/samolego/Taterzens")
            credentials {
                username = ENV.USERNAME
                password = ENV.PASSWORD
            }
        }
        // uncomment to publish to the local maven
        mavenLocal()
    }
}
